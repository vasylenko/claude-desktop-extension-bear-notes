name: Supply Chain

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  PACKAGE_PATTERN: bear-notes-mcpb-*.dxt

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting and formatting checks
        run: npm run check

  security-sca:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run Snyk SCA
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: test

  security-sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Run Snyk SAST
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: code test        

  release:
    runs-on: ubuntu-latest
    needs: lint-and-format
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Install dependencies
        run: npm ci

      - name: Create package
        run: |
          task pack
          PACKAGE_FILE=$(ls bear-notes-mcpb-*.dxt)
          echo "PACKAGE_FILE=$PACKAGE_FILE" >> $GITHUB_ENV

      - name: Extract changelog
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          CHANGELOG_BODY=$(task changelog VERSION=$VERSION)
          echo "CHANGELOG_BODY<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            ${{ env.CHANGELOG_BODY }}
            
            ---

            Download ${{ env.PACKAGE_FILE }} to install the extension.
          files: ${{ env.PACKAGE_FILE }}